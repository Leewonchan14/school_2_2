깃과 버전관리

1... 버전관리

2... 버전 관리 소프트웨어 두가지

집중형, 분산형

1)집중형 : 하나의 컴퓨터에 모든 정보가 있고 여럿사람이 달려들어 작업

관리하기 편하지만, 위험성이 높다(컴퓨터 고장시 바로 컷)

2)분산형 : 인터넷에 코드가있다.

여러사람이 작업하기 쉽지만, 관리하기 어렵다.




유닉스와 리눅스의 전용 기능은 서버와 클라이언트 두가지이다.


3... 깃에 대해

1)버전관리 도구
2)협업 도구


용어
1)초기화 : 폴더를 깃 저장소로 변경
2)커밋 : 변경된 코드 이력 기록
3)브랜치 : 분리 격리된 코드 이력 기록
4)병합 : 기존 이력과 분리된 이력 통합
5)푸시 : 로컬 저장소의 이력 서버 전송 및 공유

깃의 공간 세가지
1. 작업공간(대부분의 작업이 여기서 이뤄진다.)

2. 임시 저장공간(스테이지)

3. 기록공간(저장하는 공간)

작업공간과, 임시저장공간에서 티키타카 하다가,마지막에는 기록공간에 저장됨

파일의 상태를 논리적으로 설명한 단어들
1. 트랙크드 vs 언트랙크드 tracked,untracked//(작업공간)
추적됨, 추적되지 않음 상태(버전관리 대상과, 필요없는 대상)
사용자가 직접 명령어를 이용하여 추적상태로 바꿔주어야 함

---한줄요약 : 등록된 상태를 tracked상태라 한다.(stage로 넘어감)---

2. 스테이지 vs 언스테이지//stage , unstage//임시저장공간
임시로 저장하는 공간
작업공간의 작업 끝난 파일을 임시 저장함(변경된 부분만 저장 : +알파 부분만)
작업공간과, 스테이지 에 있는 디렉토리의 차이가 있을땐 언스테이지가 됨
기록공간으로 가기 위해선 stage 상태가 되어야 한다.

---한줄요약 : 수정되않고 등록된 상태를 stage상태라 한다., .git폴더에 저장됨---

3. 모디파이드 vs 언 모디파이드//modified , unmodified//기록공간
수정함, 수정하지 않음 상태를 구별

---한줄요약 : 수정되면 modified상태(언스테이지로 넘어간다), 수정되지 않았다면 unmodified 상태  ,github에 저장됨---

1. 추적안되는 파일 => 파일 추적함=>스테이지(버전을 임시저장함)
2-1. 커밋 => 기록공간
3-1. 삭제 => 추적안되는파일(반복)
3-2. 파일수정 => 수정된파일
4. 수정된파일을 임시저장공간으로 stage한다.=>1.의 스테이지(버전을 임시저장함)


알고보면 좋음
.git/ 에서 /표시는 디렉토리 표시이다.
.은 현재 디렉토리 ..은 상위 디렉토리

명령어 모음
ls => 숨겨진것을 뺀 나머지 모든 폴더 표시
ls -a => 모두 표시