do-while문:
do{
~작업문
}while(조건문) ;

자바의 배열 선언/:
int i[ ] = new int[10];	 또는 int[ ] i = new int[10];
선언과 함께 초기화
int i[ ] = {1,2,3,4,5} //크기 자동으로 세팅됨
int i[10]; (컴파일 오류 => 배열의 크기를 지정하면 안됨)

배열의 이름은 래퍼런스 변수이다.(복사 할때 래퍼런스 변수만 복사되지 배열이 복사되는게 아니다.)

배열은 객체이다. length라는 필드가 있다.(배열의 길이를 나타내는 변수)
배열이름.length 로 접근가능하다.

for-each 문
배열이나 나열의 각 원소를 순차적으로 접근하는데 유용(파이썬의 for문이랑 비슷)
int i[ ] = new int[10];
for(int j : i)// 반복될때 마다 j에는 배열 i의 원소들이 순차적으로 대입된다.

나열 선언방법
enum Week {월, 화, 수, 목, 금, 토, 일}

2차원 배열 선언과 생성방법
int i[ ][ ] = new int[2][5];

비정방형 배열 : 각 행마다 length길이가 다른 배열

배열의 반환은 래퍼런스 변수의 복사이다.

자바에서 main함수는 (무조건)
public static void main(String[] args)

args에는 띄어쓰기로 구분한 배개변수들이 배열로 들어간다.


try-catch-finally문(예외처리 문법)
try{
~오류가 나올법한 작업문}
catch(오류타입){
~예외처리문}
finally{
오류와 관계없이 무조건 실행되는 문장}

문자열의 비교를 할때:
비교당할 문자열.equals(비교할 문자열)
같으면 true 다르면 false